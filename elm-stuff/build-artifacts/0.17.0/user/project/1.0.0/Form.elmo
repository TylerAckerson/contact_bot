var _user$project$Form$initialModel = {name: '', email: '', input: '', status: 'none'};
var _user$project$Form$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$id('contact')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$form,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$id('form'),
						_elm_lang$html$Html_Attributes$classList(
						_elm_lang$core$Native_List.fromArray(
							[
								{
								ctor: '_Tuple2',
								_0: 'hidden',
								_1: _elm_lang$core$Native_Utils.eq(model.status, 'chatting')
							}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h1,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('contact')
							])),
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('name')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('name: ')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$id('name-field'),
								_elm_lang$html$Html_Attributes$type$('name'),
								_elm_lang$html$Html_Attributes$value(model.name),
								_elm_lang$html$Html_Events$onInput(
								function (str) {
									return {msgType: 'name', payload: str};
								})
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$for('email-field')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('email: ')
							])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$id('email-field'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Attributes$value(model.email),
								_elm_lang$html$Html_Events$onInput(
								function (str) {
									return {msgType: 'email', payload: str};
								})
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Events$onClick(
								{msgType: 'start', payload: ''}),
								_elm_lang$html$Html_Attributes$class('button')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('start chat')
							]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$id('chat-window'),
						_elm_lang$html$Html_Attributes$classList(
						_elm_lang$core$Native_List.fromArray(
							[
								{
								ctor: '_Tuple2',
								_0: 'hidden',
								_1: _elm_lang$core$Native_Utils.eq(model.status, 'none')
							}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$id('messages')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$id('chat-input'),
								_elm_lang$html$Html_Attributes$type$('text'),
								_elm_lang$html$Html_Attributes$placeholder('type message here...'),
								_elm_lang$html$Html_Attributes$value(model.input),
								_elm_lang$html$Html_Attributes$disabled(true),
								_elm_lang$html$Html_Events$onInput(
								function (str) {
									return {msgType: 'input', payload: str};
								})
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('references__container')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h1,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('references__header')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('sources')
							])),
						A2(
						_elm_lang$html$Html$a,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('reference__link'),
								_elm_lang$html$Html_Attributes$href('https://www.twilio.com/'),
								_elm_lang$html$Html_Attributes$target('_blank')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('reference reference--twilio')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__logo')
											]),
										_elm_lang$core$Native_List.fromArray(
											[])),
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__name')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('twilio')
											]))
									]))
							])),
						A2(
						_elm_lang$html$Html$a,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('reference__link'),
								_elm_lang$html$Html_Attributes$href('https://api.slack.com/'),
								_elm_lang$html$Html_Attributes$target('_blank')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('reference reference--slack')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__logo')
											]),
										_elm_lang$core$Native_List.fromArray(
											[])),
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__name')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('slack')
											]))
									]))
							])),
						A2(
						_elm_lang$html$Html$a,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('reference__link'),
								_elm_lang$html$Html_Attributes$href('http://elm-lang.org/'),
								_elm_lang$html$Html_Attributes$target('_blank')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('reference reference--elm')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__logo')
											]),
										_elm_lang$core$Native_List.fromArray(
											[])),
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__name')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('elm')
											]))
									]))
							])),
						A2(
						_elm_lang$html$Html$a,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('reference__link'),
								_elm_lang$html$Html_Attributes$href('https://github.com/TylerAckerson/contact_bot'),
								_elm_lang$html$Html_Attributes$target('_blank')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('reference reference--github')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__logo')
											]),
										_elm_lang$core$Native_List.fromArray(
											[])),
										A2(
										_elm_lang$html$Html$div,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('reference__name')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('view source')
											]))
									]))
							]))
					]))
			]));
};
var _user$project$Form$start = _elm_lang$core$Native_Platform.outgoingPort(
	'start',
	function (v) {
		return v;
	});
var _user$project$Form$update = F2(
	function (msg, model) {
		return _elm_lang$core$Native_Utils.eq(msg.msgType, 'start') ? {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{status: 'chatting'}),
			_1: _user$project$Form$start(model.name)
		} : (_elm_lang$core$Native_Utils.eq(msg.msgType, 'name') ? {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{name: msg.payload}),
			_1: _elm_lang$core$Platform_Cmd$none
		} : (_elm_lang$core$Native_Utils.eq(msg.msgType, 'email') ? {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{email: msg.payload}),
			_1: _elm_lang$core$Platform_Cmd$none
		} : (_elm_lang$core$Native_Utils.eq(msg.msgType, 'input') ? {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{input: msg.payload}),
			_1: _elm_lang$core$Platform_Cmd$none
		} : {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none})));
	});
var _user$project$Form$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: {ctor: '_Tuple2', _0: _user$project$Form$initialModel, _1: _elm_lang$core$Platform_Cmd$none},
			view: _user$project$Form$view,
			update: _user$project$Form$update,
			subscriptions: function (_p0) {
				return _elm_lang$core$Platform_Sub$none;
			}
		})
};
